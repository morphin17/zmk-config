/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 2000  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <19 20>;
        };

        caps {
            bindings = <&kp CAPS>;
            key-positions = <17 18>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp TAB           &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y      &kp U  &kp I         &kp O    &kp P          &kp SINGLE_QUOTE
&kp LEFT_CONTROL  &kp A  &kp S  &kp D         &kp F  &kp G        &kp H      &kp J  &kp K         &kp L    &kp SEMICOLON  &kp BACKSPACE
&kp LEFT_SHIFT    &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N      &kp M  &kp COMMA     &kp DOT  &kp SLASH      &kp ESCAPE
                                &kp LEFT_GUI  &mo 1  &kp SPACE    &kp ENTER  &mo 2  &kp LEFT_ALT
            >;
        };

        layer1 {
            bindings = <
&kp TAB           &kp EXCL  &kp AT     &kp HASH      &kp DLLR          &kp PRCNT         &kp CARET        &kp AMPS           &kp ASTRK     &kp LPAR   &kp RPAR  &kp BACKSLASH
&kp LEFT_SHIFT    &kp N1    &kp N2     &kp N3        &kp N4            &kp N5            &kp N6           &kp N7             &kp N8        &kp N9     &kp N0    &kp DELETE
&kp LEFT_CONTROL  &none     &kp TILDE  &kp GRAVE     &kp LEFT_BRACKET  &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp MINUS     &kp EQUAL  &none     &none
                                       &kp LEFT_GUI  &trans            &kp SPACE         &kp ENTER        &mo 3              &kp LEFT_ALT
            >;
        };

        layer2 {
            bindings = <
&kp TAB           &kp C_PLAY_PAUSE  &kp C_PREVIOUS  &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &kp C_NEXT        &mkp LCLK       &msc SCRL_DOWN  &msc SCRL_UP  &mkp RCLK        &none  &none
&kp LEFT_SHIFT    &none             &kp LEFT        &kp DOWN              &kp UP                &kp RIGHT         &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &none  &none
&kp LEFT_CONTROL  &none             &none           &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &none             &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &none  &none 
                                                    &kp LEFT_GUI          &mo 3                 &kp SPACE         &kp ENTER       &trans          &kp LEFT_ALT
            >;
        };

        layer3 {
            bindings = <
&none       &none         &bl BL_INC    &bl BL_DEC    &bl BL_CYCLE  &bl BL_TOG      &rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF  &none
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6          &kp F7           &kp F8           &kp F9           &kp F10          &kp F11          &kp F12
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &rgb_ug RGB_SAI  &rgb_ug RGB_SAD  &rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD
                                        &kp LEFT_GUI  &trans        &kp SPACE       &kp ENTER        &trans           &kp RIGHT_ALT
            >;
        };
    };
};
